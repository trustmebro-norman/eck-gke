---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: prod-es-cluster
spec:
  version: 8.15.3
  transport:
    tls:
      certificateAuthorities:
        configMapName: trust # Mount CA cert from configmap trust. Trustmanager will create trust configmap for each ns by default
      selfSignedCertificates:
        disabled: true  # Disables the self-signed certificates generated by ECK for the transport layer.
  podDisruptionBudget:
    spec:
      minAvailable: 2
      selector:
        matchLabels:
          elasticsearch.k8s.elastic.co/cluster-name: prod-es-cluster  
  nodeSets:
  - name: master
    count: 1
    config:
      node.roles: ["master"]
      # cluster level shard allocation
      # Refer: https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-cluster.html
      cluster.routing.allocation.awareness.attributes: zone
      cluster.routing.allocation.awareness.force.zone.values: us-central1-a, us-central1-b, us-central1-c
      # transport TLS
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/cert-manager-certs/tls.key
      xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/cert-manager-certs/tls.crt
    podTemplate:
      spec:
        # support workload identity 
        automountServiceAccountToken: true
        serviceAccountName: es-node
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']           
        containers:
        - name: elasticsearch
          volumeMounts:
          - name: transport-certs
            mountPath: /usr/share/elasticsearch/config/cert-manager-certs
        volumes:
        - name: transport-certs
          csi:
            driver: csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              csi.cert-manager.io/issuer-name: ca-cluster-issuer 
              csi.cert-manager.io/issuer-kind: ClusterIssuer
              csi.cert-manager.io/dns-names: "${POD_NAME}.${POD_NAMESPACE}.svc.cluster.local"                  
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: topology.kubernetes.io/zone
                  operator: In
                  values:
                  - us-central1-a
                  - us-central1-b
                  - us-central1-c    
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        storageClassName: standard-rwo
        resources:
          requests:
            storage: 10Gi
    resources:
      limits:
        memory: 1Gi
        cpu: "250Mi"
      requests:
        memory: 1Gi
        cpu: "250Mi"

  # Hot nodes
  - name: hot
    count: 3
    config:
      node.roles: ["data_hot", "data_content", "ingest"]
      # cluster level shard allocation
      cluster.routing.allocation.awareness.attributes: zone
      cluster.routing.allocation.awareness.force.zone.values: us-central1-a, us-central1-b, us-central1-c
      # transport TLS
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/cert-manager-certs/tls.key
      xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/cert-manager-certs/tls.crt      
    podTemplate:
      spec:
        # support workload identity 
        automountServiceAccountToken: true
        serviceAccountName: es-node      
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']      
        containers:
        - name: elasticsearch
          volumeMounts:
          - name: transport-certs
            mountPath: /usr/share/elasticsearch/config/cert-manager-certs        
        volumes:
        - name: transport-certs
          csi:
            driver: csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              csi.cert-manager.io/issuer-name: ca-cluster-issuer 
              csi.cert-manager.io/issuer-kind: ClusterIssuer
              csi.cert-manager.io/dns-names: "${POD_NAME}.${POD_NAMESPACE}.svc.cluster.local"         
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: topology.kubernetes.io/zone
                  operator: In
                  values:
                  - us-central1-a
                  - us-central1-b
                  - us-central1-c
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        storageClassName: standard-rwo
        resources:
          requests:
            storage: 50Gi
    resources:
      limits:
        memory: 1Gi
        cpu: "250Mi"
      requests:
        memory: 1Gi
        cpu: "250Mi"
        
  # Warm nodes
  # - name: warm
  #   count: 2
  #   config:
  #     node.roles: ["data_warm"]
  #     cluster.routing.allocation.awareness.attributes: zone
  #     cluster.routing.allocation.awareness.force.zone.values: us-central1-a, us-central1-b, us-central1-c
  #   podTemplate:
  #     spec:
  #       initContainers:
  #       - name: sysctl
  #         securityContext:
  #           privileged: true
  #           runAsUser: 0
  #         command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']      
  #       affinity:
  #         nodeAffinity:
  #           requiredDuringSchedulingIgnoredDuringExecution:
  #             nodeSelectorTerms:
  #             - matchExpressions:
  #               - key: topology.kubernetes.io/zone
  #                 operator: In
  #                 values:
  #                 - us-central1-a
  #                 - us-central1-b
  #                 - us-central1-c
  #   volumeClaimTemplates:
  #   - metadata:
  #       name: elasticsearch-data
  #     spec:
  #       accessModes:
  #       - ReadWriteOnce
  #       storageClassName: standard-rwo
  #       resources:
  #         requests:
  #           storage: 1000Gi
  #   resources:
  #     limits:
  #       memory: 16Gi
  #       cpu: "4"
  #     requests:
  #       memory: 16Gi
  #       cpu: "4"

  # Cold nodes
  # - name: cold
  #   count: 2
  #   config:
  #     node.roles: ["data_cold"]
  #     cluster.routing.allocation.awareness.attributes: zone
  #     cluster.routing.allocation.awareness.force.zone.values: us-central1-a, us-central1-b, us-central1-c
  #   podTemplate:
  #     spec:
  #       initContainers:
  #       - name: sysctl
  #         securityContext:
  #           privileged: true
  #           runAsUser: 0
  #         command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']      
  #       affinity:
  #         nodeAffinity:
  #           requiredDuringSchedulingIgnoredDuringExecution:
  #             nodeSelectorTerms:
  #             - matchExpressions:
  #               - key: topology.kubernetes.io/zone
  #                 operator: In
  #                 values:
  #                 - us-central1-a
  #                 - us-central1-b
  #                 - us-central1-c
  #   volumeClaimTemplates:
  #   - metadata:
  #       name: elasticsearch-data
  #     spec:
  #       accessModes:
  #       - ReadWriteOnce
  #       storageClassName: standard-rwo
  #       resources:
  #         requests:
  #           storage: 2000Gi
  #   resources:
  #     limits:
  #       memory: 8Gi
  #       cpu: "2"
  #     requests:
  #       memory: 8Gi
  #       cpu: "2"