---
elasticsearch:
  name: ${cluster_name}
  version: ${elastic_version}

  transport:
    enableTLS: true

  podDisruptionBudget:
    spec:
      minAvailable: ${pdb_min_available}

  # Common settings for all node types
  common:
    config:
      enableClusterShardAlloc: true
      enableTransportTLS: true
    podTemplate:
        automountServiceAccountToken: true
        serviceAccountName: es-node
        enableInitContainers: true
        enableAffinity: true
        enableTopologySpreadConstraints: true
    storageClass: ${storage_class}
    zoneAwareness:
      enabled: true
      zones:
        - ${region}-a
        - ${region}-b
        - ${region}-c    

  nodeSets:
    # Node configurations
    master:
      enabled: ${enable_master_node}
      count: ${master_count}
      config:
        node.roles: ["master"]                                 
      resources:
        limits:
          memory: ${master_mem_limit}
          cpu: ${master_cpu_limit}
        requests:
          memory: ${master_mem_request}
          cpu: ${master_cpu_request}
      storage: ${master_storage}       
    
    hot:
      enabled: ${enable_data_hot_node}
      count: ${data_hot_count}
      config:
        node.roles: ["data_hot", "data_content", "ingest"]                
      resources:
        limits:
          memory: ${data_hot_mem_limit}
          cpu: ${data_hot_cpu_limit}
        requests:
          memory: ${data_hot_mem_request}
          cpu: ${data_hot_cpu_request}
      storage: ${data_hot_storage}
    
    warm:
      enabled: ${enable_data_warm_node}
      count: ${data_warm_count}
      config:
        node.roles: ["data_warm"]
      resources:
        limits:
          memory: ${data_warm_mem_limit}
          cpu: ${data_warm_cpu_limit}
        requests:
          memory: ${data_warm_mem_request}
          cpu: ${data_warm_cpu_request}
      storage: ${data_warm_storage}
    
    cold:
      enabled: ${enable_data_cold_node}
      count: ${data_cold_count}
      config:
        node.roles: ["data_cold"]
      resources:
        limits:
          memory: ${data_cold_mem_limit}
          cpu: ${data_cold_cpu_limit}
        requests:
          memory: ${data_cold_mem_request}
          cpu: ${data_cold_cpu_request}
      storage: ${data_cold_storage}
---
elasticsearch_hpa:
  hpa_enabled: true
  # data_hot nodeSet autoscale
  data_hot_hpa_enabled: true
  node_count_min: 3
  node_count_max: 10
  cpu_min: 8
  cpu_max: 8
  mem_min: "32Gi"
  mem_max: "32Gi"
  storage_min: "500Gi"
  storage_max: "1000Gi"
---
kibana:
  enabled: ${kibana_enabled}
  name: ${cluster_name}-kibana
  version: ${elastic_version}
  count: ${kibana_count}
  service_type: ${kibana_service_type}
  kibana_mem_limit: ${kibana_mem_limit}
  kibana_cpu_limit: ${kibana_cpu_limit}
  kibana_mem_request: ${kibana_mem_request}
  kibana_cpu_request: ${kibana_cpu_request}
  ingress:
    enabled: ${kibana_ingress_enabled}
    className: ${kibana_ingress_class}
    root_domain: ${root_domain}
    use_externaldns: ${use_externaldns}
    path: "/"
    path_type: "Prefix"
    port: 5601